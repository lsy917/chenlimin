%-----------------------------------------------------------------------
% This program is main program
% Wpa is a relation matrix between paper and author in Wpa.mat
% Wpt is a relation matrix between paper and term in Wpt.mat
% Wpv is a relation matrix between paper and venue in Wpa.mat
% Wap is a relation matrix between author and paper in Wap.mat
% Waa is a relation matrix between author and author in Waa.mat
% Wav is a relation matrix between author and venue in Wav.mat
% The corresponding weighted graph of Wpa, Wpt and Wpv must be connected.
% So Wpa, Wpt, Wpv, Waa and Wav should be preconditioned
% X0 is the object dataset
%------------------------------------------------------------------------

%------------------------------------------------------------
% if clustering paper, please
clear
load Wpa.mat;
load Wpt.mat;
load Wpv.mat;
%if clustering author,please
%clear
%load Wap.mat;
%load Waa.mat;
%load Wav.mat;
% then check Wap, Waa and Wav
%----------------------------------------------------------------

% Check  input ---------------------------------------------------
h1=size(Wpa,1);
h2=size(Wpt,1);
h3=size(Wpv,1);
if h1~=h2
    error('object number is not identical');
end
if h1~=h3
    error('object number is not identical');
end
if h3~=h2
    error('object number is not identical');
end
% End check----------------------------------------------------

n0=h1;
% We can also directly construct a connected relation matrix.
% If the relation matrix is connected,the matrix can be used directly.
% So we do not call function Prematrix().

Wpa=Prematrix(Wpa,1e-7);
Wpt=Prematrix(Wpt,1e-7);
Wpv=Prematrix(Wpv,1e-7);
Y(:,:,1)=ApCte(Wpa);
Y(:,:,2)=ApCte(Wpt);
Y(:,:,3)=ApCte(Wpv);

bt1=input('the weight of paper and author:');
bt2=input('the weight of paper and term:');
bt3=input('the weight of paper and venue:');
kc=input('cluster number:');

c=randperm(n0) %initial centers
c=c(1:kc)
center(:,:,1)=Y(:,c,1);
center(:,:,2)=Y(:,c,2);
center(:,:,3)=Y(:,c,3);
clus(1:n0)=0; %clus(i) is the cluster label for the ith object data
for p=1:40
    for t=1:3
        for i=1:n0
            kk=1;
            mid=bt1*norm(Y(:,i,1)-center(:,1,1))^2+bt2*norm(Y(:,i,2)-center(:,1,2))^2+bt3*norm(Y(:,i,3)-center(:,1,3))^2;
            for j=2:kc
                sd=bt1*norm(Y(:,i,1)-center(:,j,1))^2+bt2*norm(Y(:,i,2)-center(:,j,2))^2+bt3*norm(Y(:,i,3)-center(:,j,3))^2;
                if(mid>sd)
                    mid=sd;
                    kk=j;
                end
            end
            clus(i)=kk; % kk is the cluster number for the ith object  
        end %for i
        
        ck(1:kc)=0; %ck(i) is data number in the ith cluster
       
        center(:,1:kc,t)=0; %re-compute the new centers in the tth indicator subset
        for i=1:n0
            c=clus(i);ck(c)=ck(c)+1;
            center(:,c,t)=center(:,c,t)+Y(:,i,t);
        end
        for i=1:kc
        center(:,i,t)=center(:,i,t)/ck(i);
        end
    end %for t
end %for p
clus
% output cluters------------------------------
for k=1:kc
   for i=1:n0
       if clus(i)==k
            disp(X0(i));
       end
   end
end